{"title":"斐波那契数列代码实现","uid":"303cf45e0ace07b44a01a04e2f8411a1","slug":"斐波那契数列代码实现","date":"2024-02-11T13:33:52.000Z","updated":"2024-02-11T14:33:26.807Z","comments":true,"path":"api/articles/斐波那契数列代码实现.json","keywords":null,"cover":"https://picst.sunbangyan.cn/2024/02/11/fc67b6161435d5112dd14294ea60c63a.webp","content":"<h1 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a>斐波那契数列</h1><p>斐波那契数列（Fibonacci sequence），又称黄金分割数列 ，因数学家莱昂纳多·<a href=\"https://baike.baidu.com/item/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/2037797?fromModule=lemma_inlink\">斐波那契</a>（Leonardo Fibonacci）以兔子繁殖为例子而引入，故又称“兔子数列”，其数值为：1、1、2、3、5、8、13、21、34……在数学上，这一数列以如下<a href=\"https://baike.baidu.com/item/%E9%80%92%E6%8E%A8/4506973?fromModule=lemma_inlink\">递推</a>的方法定z义：<em>F</em>(0)&#x3D;1，<em>F</em>(1)&#x3D;1, <em>F</em>(n)&#x3D;<em>F</em>(n - 1)+<em>F</em>(n - 2)（<em>n</em> ≥ 2，<em>n</em> ∈ N*）。</p>\n<p>对于算法的学习而言，有很多题目会从斐波那契数列来考验编程者的逻辑思维。</p>\n<h2 id=\"Java代码实现\"><a href=\"#Java代码实现\" class=\"headerlink\" title=\"Java代码实现\"></a>Java代码实现</h2><h3 id=\"用递归的方式实现\"><a href=\"#用递归的方式实现\" class=\"headerlink\" title=\"用递归的方式实现\"></a>用递归的方式实现</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">zhishidian</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Fibonacci</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F78C6C\">50</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Fibonacci of %d is :%d</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">f</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//定义一个求解斐波那契数列的方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">f</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">i</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">||</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">f</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)+</span><span style=\"color: #82AAFF\">f</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"使用普通循环方法实现\"><a href=\"#使用普通循环方法实现\" class=\"headerlink\" title=\"使用普通循环方法实现\"></a>使用普通循环方法实现</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">zhishidian</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FibonacciXUNHUAN</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//定义三个变量分别用来存储三个斐波那契数列的数值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> f1</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> f2</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> f3</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Fibonacci of %d is %d</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #C3E88D\">Fibonacci of %d is %d</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">f1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">f2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F78C6C\">50</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            f3</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">f2</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">f1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Fibonacci of %d is %d</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">f3</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            f1</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">f2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            f2</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">f3</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"使用数组方式实现\"><a href=\"#使用数组方式实现\" class=\"headerlink\" title=\"使用数组方式实现\"></a>使用数组方式实现</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">zhishidian</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Arrays</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">FibonacciSHUZU</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\">arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">50</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #676E95; font-style: italic\">//new一个50个数的数组，准备输出50个斐波那契数列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]+</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Fibonacci:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"使用其他方式实现\"><a href=\"#使用其他方式实现\" class=\"headerlink\" title=\"使用其他方式实现\"></a>使用其他方式实现</h3><p>当然还有许多可以优化并且巧妙的方式可以实现斐波那契数列，今后我们有时间再补充</p>\n<h2 id=\"使用斐波那契数列解题\"><a href=\"#使用斐波那契数列解题\" class=\"headerlink\" title=\"使用斐波那契数列解题\"></a>使用斐波那契数列解题</h2><p>下面给出一些常见的考察到斐波那契数列知识点的常见题目</p>\n","feature":true,"text":"斐波那契数列斐波那契数列（Fibonacci sequence），又称黄金分割数列 ，因数学家莱昂纳多·斐波那契（Leonardo Fibonacci）以兔子繁...","permalink":"/post/斐波那契数列代码实现","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"Java","slug":"Java","count":4,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97\"><span class=\"toc-text\">斐波那契数列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">Java代码实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E9%80%92%E5%BD%92%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">用递归的方式实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%99%AE%E9%80%9A%E5%BE%AA%E7%8E%AF%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">使用普通循环方法实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%95%B0%E7%BB%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">使用数组方式实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">使用其他方式实现</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E8%A7%A3%E9%A2%98\"><span class=\"toc-text\">使用斐波那契数列解题</span></a></li></ol></li></ol>","author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"基于Java的排序算法","uid":"3a5ead127caa80ef0aaf607575d6dc9c","slug":"基于Java的排序算法","date":"2024-02-17T12:59:25.000Z","updated":"2024-02-19T04:45:10.293Z","comments":true,"path":"api/articles/基于Java的排序算法.json","keywords":null,"cover":[],"text":"基于 Java 的排序算法八大排序，三大查找是数据结构基础知识点，今天来学习一下排序算法 所谓排序，就是整理表中的元素，使表中的元素按照一定的关键字依次递增或者...","permalink":"/post/基于Java的排序算法","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"Java","slug":"Java","count":4,"path":"api/tags/Java.json"}],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"feature":true},"next_post":{"title":"51单片机-模块化编程","uid":"746936c330f59bbc3420fd4970ee32dd","slug":"51单片机-模块化编程","date":"2024-02-03T04:25:17.000Z","updated":"2024-02-03T15:27:41.615Z","comments":true,"path":"api/articles/51单片机-模块化编程.json","keywords":null,"cover":[],"text":"模块化编程传统方式编程：所有的函数均存放在 main.c 文件里，使用模块较多，则一个文件会包含很多代码，不方便代码的组织和管理，而且在一定程度上会影响编程者的...","permalink":"/post/51单片机-模块化编程","photos":[],"count_time":{"symbolsCount":606,"symbolsTime":"1 mins."},"categories":[{"name":"51单片机","slug":"51单片机","count":6,"path":"api/categories/51单片机.json"}],"tags":[{"name":"电子","slug":"电子","count":7,"path":"api/tags/电子.json"}],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}}}}