{"title":"51单片机原理及应用","uid":"0c7c5c12646ceac7713a737866b0b523","slug":"51单片机基础","date":"2024-02-27T15:18:00.000Z","updated":"2024-03-01T02:55:10.869Z","comments":true,"path":"api/articles/51单片机基础.json","keywords":null,"cover":"https://picdm.sunbangyan.cn/2024/02/27/82daa9f37704b8d40e4ed39570079d0e.jpeg","content":"<h1 id=\"51-单片机原理及应用\"><a href=\"#51-单片机原理及应用\" class=\"headerlink\" title=\"51 单片机原理及应用\"></a>51 单片机原理及应用</h1><h2 id=\"第一章-51-单片机基础知识\"><a href=\"#第一章-51-单片机基础知识\" class=\"headerlink\" title=\"第一章 51 单片机基础知识\"></a>第一章 51 单片机基础知识</h2><h3 id=\"单片机的发展及概述\"><a href=\"#单片机的发展及概述\" class=\"headerlink\" title=\"单片机的发展及概述\"></a>单片机的发展及概述</h3><h4 id=\"微机、微处理器、单片机概念\"><a href=\"#微机、微处理器、单片机概念\" class=\"headerlink\" title=\"微机、微处理器、单片机概念\"></a>微机、微处理器、单片机概念</h4><p>从使用角度来讲，计算机可以分为 <strong>广泛的通用计算机系统</strong> ** 和 ** 嵌入式计算机系统**</p>\n<p>对于嵌入式设备，以计算机技术为基础软硬件可裁剪，可靠性高，实时性强。</p>\n<p><strong>单片微型计算机（单片机）</strong> Single Chip Microcomputer</p>\n<p><strong>SCM</strong>——将通用微计算机基本功能部件集成在一块芯片上构成的一种专用的微计算机系统。</p>\n<p>从 1976 年起，Intel 公司先后推出 <strong>MCS-48（4 位）</strong>、<strong>MCS-51（8 位）</strong>、<strong>MCS-96（16 位）</strong> 三大系列处理器，现在应用最广的是 8 位和 32 位的 ARM 处理器。</p>\n<h3 id=\"单片机介绍：\"><a href=\"#单片机介绍：\" class=\"headerlink\" title=\"单片机介绍：\"></a>单片机介绍：</h3><ul>\n<li>单片机：简称 MCU 或 EMCU <em>（Microcontroller Unit 微控制器）</em> <em>（Embedded Microcontroller Unit 嵌入式微控制器）</em></li>\n<li>内部集成了 CPU，RAM，ROM，定时器，中断系统，通讯结构等一系列电脑常用的硬件功能</li>\n<li>单片机依靠 <strong>传感器</strong> 信息采集，依靠 <strong>CPU</strong> 处理信息，硬件设备等</li>\n<li>单片机相当于一个袖珍版计算机，一个芯片可以构成完整的计算机系统，但是在性能上相差甚远。</li>\n</ul>\n<p>例：STC89C52 单片机</p>\n<ul>\n<li>所属系列：51 单片机系列</li>\n<li>公司：STC 单机（中国的）</li>\n<li>位数：8 位</li>\n<li>RAM：512 字节（512B）</li>\n<li>ROM：8K（Flash）（51 内核的片内程序存储器是 4KBROM）</li>\n<li>工作频率：12MHz</li>\n</ul>\n<p>为什么叫 51 单片机？</p>\n<p>原因是 80 年代 Intel 开发的 8051 单片机内核的统称，凡是与“8051”内核一样的单片机都称为 51 系列单片机</p>\n<p>单片机命名规则：</p>\n<p>例：STC89C52</p>\n<p><img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image2.png\" alt=\"image-20240127185640790\"></p>\n<ol>\n<li>STC：公司</li>\n<li>89：系列</li>\n<li>C：工作电压<ul>\n<li>C：5.5V~3.8V</li>\n<li>LE：3.6V<del>2.4V&#x2F;3.4V</del>2.4V</li>\n</ul>\n</li>\n<li>52：程序空间及 RAM 空间大小<ul>\n<li><img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image1.png\" alt=\"image-20240127185555934\"></li>\n</ul>\n</li>\n<li>35：工作频率（可达到 35MHz）</li>\n<li>I：工业温度范围<ul>\n<li>I：工业级：-40 ℃~80 ℃</li>\n<li>C：商业级：0 ℃~70 ℃</li>\n</ul>\n</li>\n<li>DIP40：封装类型（DIP：直插）</li>\n<li>40：管脚数</li>\n</ol>\n<h3 id=\"单片机功能及引脚\"><a href=\"#单片机功能及引脚\" class=\"headerlink\" title=\"单片机功能及引脚\"></a>单片机功能及引脚</h3><h4 id=\"单片机功能综述\"><a href=\"#单片机功能综述\" class=\"headerlink\" title=\"单片机功能综述\"></a>单片机功能综述</h4><p>8051 是 51 单片机系统中典型产品</p>\n<ul>\n<li>8 位 CPU\t4KB ROM\t128 字节 RAM\t32 条 I&#x2F;O 口线\t111 条指令\t21 个专用寄存器\t2 个可编程定时&#x2F;计数器\t5 个中断源，2 个优先级\t1 个串行通信口\t……</li>\n</ul>\n<h4 id=\"单片机封装\"><a href=\"#单片机封装\" class=\"headerlink\" title=\"单片机封装\"></a>单片机封装</h4><p>51 单片机的芯片一般有三种封装，一种是双列直插式 DIP，另一种是方形封装，分为 PLCC 封装和 QFP 封装，他们的区别是有无底座。</p>\n<p>详情见 STC89C52 手册</p>\n<p><img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image4.png\" alt=\"image-20240127201000937\"></p>\n<p><img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image5\" alt=\"image-20240226213218518\"></p>\n<h4 id=\"单片机引脚及功能\"><a href=\"#单片机引脚及功能\" class=\"headerlink\" title=\"单片机引脚及功能\"></a>单片机引脚及功能</h4><p><strong>标准 51 的四十个引脚</strong></p>\n<p>以双列直插式封装为例，芯片有 P0~P3 四个接口，其中</p>\n<p>分为 4 类</p>\n<ol>\n<li>电源引脚 40 和接地引脚 20</li>\n<li>时钟引脚 XTAL1（18）和 XTAL2（19）</li>\n<li>并行 I&#x2F;O 口：P0、P1、P2、P3（数据在里面并行传输）</li>\n<li>控制引脚：复位引脚 RST（9）、ALE 地址锁存控制信号（30）、<span style=\"text-decoration:overline;\">PSEN</span>、<span style=\"text-decoration:overline;\">EA</span>外部程序存储器控制信号</li>\n</ol>\n<ul>\n<li>P1.0–P1.7（）共八个引脚为输入输出脚</li>\n<li>RST&#x2F;Vp(9)为复位信号复用脚（当 RST 引脚上出现 24 个时钟周期以上的高电平时，系统即初始复位）</li>\n<li>P3.0–P3.7（10-17）共八个引脚为输入输出脚，<strong>每个引脚都有第二功能</strong></li>\n<li>时钟 XTAL2 脚（18）：片内振荡电路的输出端</li>\n<li>时钟 XTAL1 脚（19）：片内振荡电路的输入端</li>\n<li>20 引脚：接地端</li>\n<li>P2.0–P2.7（21-28）共八个引脚为输入输出脚</li>\n<li><em><span style=\"text-decoration:overline;\">PSEN</span>（29）：访问外部程序存储器时，这个引脚输出负脉冲选通信号，PC 的 16 位地址数据将出现在 P0 口和 P2 口上。当 P0 上的第八位数据被锁存后，外部程序存储器则把指令数据放在 P0 口上，由 CPU 读入并执行</em></li>\n<li><em>ALE&#x2F;<span style=\"text-decoration:overline;\">PROG</span>（30）：访问外部程序存储器时，ALE（地址锁存）的输出用于锁存地址的低位字节</em>，<strong>其中 ALE 在高电平期间，P0 口上出现地址信息，ALE 下降沿时 P0 口上地址信息锁存到片外地址锁存器，ALE 低电平期间 P0 口上一般出现指令和数据信息。</strong></li>\n<li><span style=\"text-decoration:overline;\">EA</span>&#x2F;V<span style=\"vertical-align:sub;\">pp</span>（31）：程序存储器内外部选通信号线，8051 和 8751 单片机内置有 4KB 的程序存储器，当此脚为高电平时并且程序地址小于 4KB，读取内部程序指令，超过 4KB 则读取外部指令数据，当此脚为低电平时（接地）程序存储器全部使用片外的 ROM。</li>\n<li>P0.0-P0.7(32-39)共八个引脚为输入输出脚</li>\n<li>40 引脚：接+5V 电源</li>\n</ul>\n<h3 id=\"单片机内部结构\"><a href=\"#单片机内部结构\" class=\"headerlink\" title=\"单片机内部结构\"></a>单片机内部结构</h3><p>单片机即单片微型计算机，是把各种功能集成在一片芯片上构成的微型计算机</p>\n<ol>\n<li><p>中央处理器 CPU</p>\n<ul>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><em>主要由算术&#x2F;逻辑运算器（ALU）和控制器、寄存器组成。单片机在工作时，CPU 会按先后顺序从 ROM（程序存储器）的第一个存储单元（0000H 单元）开始读取程序指令和数据，然后按指令要求对数据进行算术（如加运算）或逻辑运算（如与运算），运算结果存入 RAM（数据存储器），在此过程中，CPU 的控制器会输出相应的控制信号，以完成指定的操作。</em></p></blockquote>\n</li>\n<li></li>\n</ul>\n</li>\n<li><p>只读存储器 ROM（Read Only Memory）</p>\n<ul>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>是一种具有存储功能的电路，断电后存储的信息不会消失</strong>。<strong><em>* ROM（程序存储器）类似于计算机中的硬盘*</em> <strong>，保存了电影、文档、音乐等文件，把电源关掉后，下次重新打开计算机，所有的文件照样还在。</strong> ROM 主要用来存储程序和常数，用编程软件编写好的程序经编译后写入 ROM</strong>。<em>STC89C5X 单片机中使用的 ROM 属于 Flash Memory（快闪存储器）Flash Memory 简称闪存，是一种长寿命的非易失性（在断电情况下仍能保持所存储的数据信息）的存储器，数据删除不是以单个字节为单位，而是以固定的区块（扇区）为单位，区块大小一般为 256KB 至 20MB。Flash Memory 是 EEPROM 的变种，两者的区别主要在于，EEPROM 能在字节水平上进行删除和重写，而大多数 Flash Memory 需要按区块擦除或重写。由于 Flash Memory 断电时仍能保存数据，且数据擦写方便，故使用非常广泛（如手机、数码相机使用的存储卡）。</em></p></blockquote>\n</li>\n</ul>\n</li>\n<li><p>随机读写存储器 RAM（Read Random Access Memory）</p>\n<ul>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>可以存入信息（称作写），也可以将信息取出（称作读），断电后存储的信息会全部消失</strong>。RAM（数据存储器）是单片机的数据存储空间，用来存储程序运行过程中产生的和需要的数据，跟计算机的内存是相似的概念。RAM 可分为 DRAM（动态存储器）和 SRAM（静态存储器）。 </p>\n<p>DRAM 的存储单元采用了 MOS 管，它利用 MOS 管的栅极电容来存储信息，由于栅极电容容量小且漏电，故栅极电容保存的信息容易消失，为了避免存储的信息丢失，必须定时给栅极电容重写信息，这种操作称为“刷新”，故 DRAM 内部要有刷新电路。DRAM 虽然要有刷新电路，但其存储单元结构简单、使用元件少、功耗低，且集成度高、单位容量价格低，因此需要大容量 RAM 的电路或电子产品（如计算机的内存条）一般采用 DRAM 作为 RAM </p>\n<p>SRAM 的存储单元 <strong>由具有记忆功能的触发器构成</strong>，它具有存取速度快、使用简单、不需刷新和静态功耗极低等优点，但元件数多、集成度低、运行时功耗大，单位容量价格高。因此一般需要小容量 RAM 的电路或电子产品（如单片机的 RAM）一般采用 SRAM 作为 RAM</p></blockquote>\n</li>\n</ul>\n</li>\n<li><p>输入&#x2F;输出（I&#x2F;O）单元</p>\n</li>\n<li><p>定时&#x2F;计数器</p>\n<ul>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>定时器&#x2F;计数器是单片机内部具有计数功能的电路，可以根据需要将它设为定时器或计数器。如果要求 CPU 在一段时间（如 5ms）后执行某段程序，可让定时器&#x2F;计数器工作在定时状态，定时器&#x2F;计数器开始计时，当计到 5ms 后马上产生一个请求信号送到中断控制器，中断控制器则输出信号让 CPU 停止正在执行的程序，转而去执行 ROM 中特定的某段程序。如果让定时器&#x2F;计数器工作在计数状态，可以从单片机的 T0 或 T1 引脚输入脉冲信号，定时器&#x2F;计数器开始对输入的脉冲进行计数，当计数到某个数值（如 1000）时，马上输出一个信号送到中断控制器，让中断控制器控制 CPU 去执行 ROM 中特定的某段程序（如让 P0.0 引脚输出低电平点亮外接 LED 灯的程序）。</p></blockquote>\n</li>\n</ul>\n</li>\n<li><p>串行口</p>\n<ul>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 串行通信口 <strong>是单片机与外部设备进行串行通信的接口</strong>。当单片机要将数据传送给外部设备时，可以通过串行通信口将数据由 TXD 端输出；外部设备送来的数据可以从 RXD 端输入，通过串行通信口将数据送入单片机。串行是指数据传递的一种方式，串行传递数据时，数据是一位一位传送的。</p></blockquote>\n</li>\n</ul>\n</li>\n<li><p>等等</p>\n</li>\n</ol>\n<p>内部结构如下图所示</p>\n<img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image6.png\" alt=\"image-20240227201514630\" style=\"zoom: 67%;\">\n\n<p><img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image7.png\" alt=\"image-20240227204855827\"></p>\n<h4 id=\"中央处理器CPU\"><a href=\"#中央处理器CPU\" class=\"headerlink\" title=\"中央处理器CPU\"></a>中央处理器CPU</h4><p>主要由算术&#x2F;逻辑运算器（ALU）和控制器、寄存器组成。</p>\n<h5 id=\"算术逻辑单元\"><a href=\"#算术逻辑单元\" class=\"headerlink\" title=\"算术逻辑单元\"></a>算术逻辑单元</h5><p>ALU，主要由一个加法器，两个 8 位暂存器（TMP1 和 TMP2）和布尔处理器组成。</p>\n<h5 id=\"定时控制部件\"><a href=\"#定时控制部件\" class=\"headerlink\" title=\"定时控制部件\"></a>定时控制部件</h5><p>起到控制器的作用，由 <strong>定时控制逻辑</strong>、<strong>指令寄存器</strong> 和 <strong>振荡器</strong> 等电路组成，</p>\n<ul>\n<li>指令寄存器（IR Instruction Register）用于存放从程序存储器中读取的指令码</li>\n<li>定时控制逻辑用于对指令寄存器中的指令进行译码并在晶振的配合下产生执行指令所需的时序脉冲，从而完成指令</li>\n</ul>\n<h5 id=\"专用寄存器组\"><a href=\"#专用寄存器组\" class=\"headerlink\" title=\"专用寄存器组\"></a>专用寄存器组</h5><p>专用寄存器组用于指示当前要执行指令的内存地址、存放操作数和指示指令执行后的状态，包括程序计数器 PC、累加器 A、程序状态字 PSW（Program Status Word）、堆栈指示器 SP 寄存器、数据指针 DPTR 和通用寄存器 B</p>\n<ul>\n<li>程序计数器（PC）<ul>\n<li>是一个 16 位 2 进制的程序地址寄存器（2<span style=\"vertical-align:super;\">16</span>&#x3D;65536字节&#x3D;64KB），用于存放下一条要执行指令的地址，引导程序运行，执行完后自动加一，以便指向下一条要执行的指令。复位时PC值为0，程序从0000H地址开始运行。可以说 CPU 就是靠 PC 指针来实现程序的执行</li>\n</ul>\n</li>\n<li>累加器 A<ul>\n<li>累加器 A 是<strong>程序中最常用的</strong> 8 位 2 进制特殊功能寄存器，用于存放操作数和运算结果。在 CPU 执行运算前，把两个操作数中的一个通常在累加器 A 当中，运算完成后便把结果存放在累加器 A 当中，可以说累加器 A 是使用最频繁的寄存器</li>\n</ul>\n</li>\n<li>程序状态字 PSW<ul>\n<li>是一个 8 位 2 进制寄存器，用于存放指令执行后有关 CPU 的状态</li>\n</ul>\n</li>\n<li>堆栈指针 SP<ul>\n<li>堆栈是一种数据结构，SP 是一个 8 位寄存器，指示了栈顶在内部 RAM 的位置。</li>\n</ul>\n</li>\n<li>数据指针 DPTR<ul>\n<li>是一个 16 位寄存器，由 2 个 8 位寄存器 DPH 和 DPL 组成，其中 DPH 为高 8 位，DPL 为低 8 位，既可以存放数据存储器也可以存放程序存储器的地址。</li>\n</ul>\n</li>\n<li>通用寄存器 B<ul>\n<li>是专门为乘法和除法而设置的寄存器，是一个 2 进制 8 位寄存器在乘法或除法运算之前用于存放乘数或除数，运算后用于存放乘积的高 8 为或除法的余数。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"存储器结构\"><a href=\"#存储器结构\" class=\"headerlink\" title=\"存储器结构\"></a>存储器结构</h4><p>MCS-51 单片机存储器的特点是将数据存储器和程序存储器分开编址，并有各自的寻址方式和寻址单元。</p>\n<p>存储器在物理上划分为 4 个单元：片内 ROM、片外 ROM、片内 RAM、片外 RAM</p>\n<p><img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image8.png\" alt=\"image-20240227205300167\"></p>\n<h5 id=\"程序存储器-ROM\"><a href=\"#程序存储器-ROM\" class=\"headerlink\" title=\"程序存储器 ROM\"></a>程序存储器 ROM</h5><p>编程人员编写的程序存放在程序存储器中，单片机重启后，PC 的内容为 0000H，所以系统从 0000H 开始执行程序，但是考虑到中断系统，用户程序一般不从 0000H 开始存放，因为接下来有一段程序区要用于存放中断向量表，所以用户不能占用，要求分配地址如下 <img src=\"/post/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80/image9.png\" alt=\"image-20240227205705442\"></p>\n<p>用户一般从 0030H 处开始，而在 0000H 处放置一条跳转指令，这样复位后从 0000H 处跳转至用户的主程序。</p>\n<p>此外，还需要看引脚&#x2F;EA 的状态</p>\n<ul>\n<li>&#x2F;EA 接地：程序存储器全部使用片外 ROM</li>\n<li>&#x2F;EA 接高电平：CPU 先从内部程序存储器中读取程序，当 PC 超过内部 ROM 容量时转外部程序存储器读取程序</li>\n</ul>\n<h5 id=\"片内-RAM\"><a href=\"#片内-RAM\" class=\"headerlink\" title=\"片内 RAM\"></a>片内 RAM</h5><p>MCU-51 的 RAM 存储器共有 128 字节，可分为 4 个区域，分别是 <strong>特殊功能寄存器区、用户区、位寻址区、工作寄存器区。</strong></p>\n<h6 id=\"工作寄存器区\"><a href=\"#工作寄存器区\" class=\"headerlink\" title=\"工作寄存器区\"></a>工作寄存器区</h6><p>从 00H-1FH 为 4 组工作寄存器区，每组占用 8 个 RAM 字节，记为 R0-R7。工作寄存器组的选择由程序状态字 PSW 中的 RS1-RS0 位确定</p>\n<h6 id=\"位寻址区\"><a href=\"#位寻址区\" class=\"headerlink\" title=\"位寻址区\"></a>位寻址区</h6><p>从 20H-2FH 为位寻址区，16 个字节的的 128 位可以单独操作 ，20H<del>2FH，不仅可以字节寻址，8 个字节的每一位都可以位寻址 ；<br>               位地址范围 00H</del>7FH, 地址范围 20H~2FH<br>               位地址表示方法：位地址，字节地址.位<br>               位地址与字节地址的转换关系 ： 位地址 &#x3D;(字节地址-20H)*8+Di 的 i 值</p>\n<h6 id=\"用户区\"><a href=\"#用户区\" class=\"headerlink\" title=\"用户区\"></a>用户区</h6><p>用户区共 80 个 RAM 单元，用于存放用户数据或者作为堆栈区，其中的数据存储区按字节存取</p>\n<h6 id=\"特殊功能寄存器\"><a href=\"#特殊功能寄存器\" class=\"headerlink\" title=\"特殊功能寄存器\"></a>特殊功能寄存器</h6><p>寄存器符号\t地 址\t寄存器名称</p>\n<ul>\n<li>ACC\tE0H\t累加器</li>\n<li>B\tF0H\t乘法寄存器</li>\n<li>PSW\tD0H\t程序状态字<br>SP\t81H\t堆栈指针<br>DPL\t82H\t数据存储器指针（低 8 位）<br>DPH\t83H\t数据存储器指针（高 8 位）</li>\n<li>IE\tA8H\t中断允许控制器</li>\n<li>IP\tD8H\t中断优先级控制器</li>\n<li>P0\t80H\t通道 0</li>\n<li>P1\t90H\t通道 1</li>\n<li>P2\tA0H\t通道 2</li>\n<li>P3\tB0H\t通道 3<br>PCON\t87H\t电源控制和波特率选择</li>\n<li>SCON\t98H\t串行口控制器<br>SBUF\t99H\t串行数据缓冲器</li>\n<li>TCON\t88H\t定时控制器<br>TMOD\t89H\t定时方式选择<br>TL0\t8AH\t定时器 0 低 8 位<br>TL1\t8BH\t定时器 1 低 8 位<br>TH0\t8CH\t定时器 0 高 8 位<br>TH1\t8DH\t定时器 1 高 8 位</li>\n</ul>\n<h4 id=\"I-O-口结构\"><a href=\"#I-O-口结构\" class=\"headerlink\" title=\"I&#x2F;O 口结构\"></a>I&#x2F;O 口结构</h4><h5 id=\"并行-I-O-口\"><a href=\"#并行-I-O-口\" class=\"headerlink\" title=\"并行 I&#x2F;O 口\"></a>并行 I&#x2F;O 口</h5><h5 id=\"串行-I-O-口\"><a href=\"#串行-I-O-口\" class=\"headerlink\" title=\"串行 I&#x2F;O 口\"></a>串行 I&#x2F;O 口</h5><h4 id=\"定时-计数器\"><a href=\"#定时-计数器\" class=\"headerlink\" title=\"定时&#x2F;计数器\"></a>定时&#x2F;计数器</h4><p>8015 有两个 16 位定时&#x2F;计数器 T0 和 T1，分别与两个 8 位寄存器 TL0、TH0 及 TL1、TH1 对应</p>\n<p>8051 的定时&#x2F;计数器可以工作在定时方式和计数方式</p>\n<p><strong>定时方式</strong>：实现对单片机内部的时钟冒充你或分频后的脉冲进行计数</p>\n<p><strong>计数方式</strong>：实现对外部脉冲的计数。</p>\n<h4 id=\"中断系统\"><a href=\"#中断系统\" class=\"headerlink\" title=\"中断系统\"></a>中断系统</h4><p>程序执行过程中，有时需停下正在执行的工作而去执行一些其他重要工作，并在执行完后返回到刚刚执行的程序中继续执行，这就是中断的一个过程。</p>\n<p>8051 有 5 个中断源，分别为 2 个外部中断 INT0 和 INT1，两个定时器中断 T0 和 T1 和一个串行中断。两个中断优先级控制可实现中断服务嵌套。</p>\n<p>中断的控制由中断允许寄存器 IE 和中断优先寄存器 IP 实现</p>\n<h2 id=\"第二章-Keil-C51-软件入门与调试\"><a href=\"#第二章-Keil-C51-软件入门与调试\" class=\"headerlink\" title=\"第二章 Keil C51 软件入门与调试\"></a>第二章 Keil C51 软件入门与调试</h2><p>使用单片机需要学习计算机语言，可以采用汇编语言和 C 语言（C51），由于汇编语言晦涩难懂，所以大多数选择 C 语言，我们这里以 C 语言为例，学习 KeilC51 软件的使用，同时使用 Proteus 软件进行仿真。</p>\n<h2 id=\"Protues-仿真软件与-Keil-联合调试\"><a href=\"#Protues-仿真软件与-Keil-联合调试\" class=\"headerlink\" title=\"Protues 仿真软件与 Keil 联合调试\"></a>Protues 仿真软件与 Keil 联合调试</h2><h2 id=\"并行-I-O-端口\"><a href=\"#并行-I-O-端口\" class=\"headerlink\" title=\"并行 I&#x2F;O 端口\"></a>并行 I&#x2F;O 端口</h2><h2 id=\"51-单片机的中断系统\"><a href=\"#51-单片机的中断系统\" class=\"headerlink\" title=\"51 单片机的中断系统\"></a>51 单片机的中断系统</h2><h2 id=\"51-单片机定时-计数器\"><a href=\"#51-单片机定时-计数器\" class=\"headerlink\" title=\"51 单片机定时&#x2F;计数器\"></a>51 单片机定时&#x2F;计数器</h2><h2 id=\"51-单片机串行通信接口\"><a href=\"#51-单片机串行通信接口\" class=\"headerlink\" title=\"51 单片机串行通信接口\"></a>51 单片机串行通信接口</h2><h2 id=\"键盘输入\"><a href=\"#键盘输入\" class=\"headerlink\" title=\"键盘输入\"></a>键盘输入</h2><h2 id=\"输出设备\"><a href=\"#输出设备\" class=\"headerlink\" title=\"输出设备\"></a>输出设备</h2><h2 id=\"单片机系统拓展\"><a href=\"#单片机系统拓展\" class=\"headerlink\" title=\"单片机系统拓展\"></a>单片机系统拓展</h2><h2 id=\"常用外围接口芯片\"><a href=\"#常用外围接口芯片\" class=\"headerlink\" title=\"常用外围接口芯片\"></a>常用外围接口芯片</h2><h2 id=\"常用数据传输接口\"><a href=\"#常用数据传输接口\" class=\"headerlink\" title=\"常用数据传输接口\"></a>常用数据传输接口</h2>","feature":true,"text":"51 单片机原理及应用第一章 51 单片机基础知识单片机的发展及概述微机、微处理器、单片机概念从使用角度来讲，计算机可以分为 广泛的通用计算机系统 ** 和 *...","permalink":"/post/51单片机基础","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"51单片机","slug":"51单片机","count":6,"path":"api/categories/51单片机.json"}],"tags":[{"name":"电子","slug":"电子","count":7,"path":"api/tags/电子.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#51-%E5%8D%95%E7%89%87%E6%9C%BA%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">51 单片机原理及应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%AB%A0-51-%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">第一章 51 单片机基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E5%8F%91%E5%B1%95%E5%8F%8A%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">单片机的发展及概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E6%9C%BA%E3%80%81%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8%E3%80%81%E5%8D%95%E7%89%87%E6%9C%BA%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">微机、微处理器、单片机概念</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E4%BB%8B%E7%BB%8D%EF%BC%9A\"><span class=\"toc-text\">单片机介绍：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E5%8A%9F%E8%83%BD%E5%8F%8A%E5%BC%95%E8%84%9A\"><span class=\"toc-text\">单片机功能及引脚</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E5%8A%9F%E8%83%BD%E7%BB%BC%E8%BF%B0\"><span class=\"toc-text\">单片机功能综述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">单片机封装</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%95%E8%84%9A%E5%8F%8A%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">单片机引脚及功能</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">单片机内部结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8CPU\"><span class=\"toc-text\">中央处理器CPU</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%9C%AF%E9%80%BB%E8%BE%91%E5%8D%95%E5%85%83\"><span class=\"toc-text\">算术逻辑单元</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%97%B6%E6%8E%A7%E5%88%B6%E9%83%A8%E4%BB%B6\"><span class=\"toc-text\">定时控制部件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%93%E7%94%A8%E5%AF%84%E5%AD%98%E5%99%A8%E7%BB%84\"><span class=\"toc-text\">专用寄存器组</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E5%99%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">存储器结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E5%AD%98%E5%82%A8%E5%99%A8-ROM\"><span class=\"toc-text\">程序存储器 ROM</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%89%87%E5%86%85-RAM\"><span class=\"toc-text\">片内 RAM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E5%AF%84%E5%AD%98%E5%99%A8%E5%8C%BA\"><span class=\"toc-text\">工作寄存器区</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E5%AF%BB%E5%9D%80%E5%8C%BA\"><span class=\"toc-text\">位寻址区</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E5%8C%BA\"><span class=\"toc-text\">用户区</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E5%8A%9F%E8%83%BD%E5%AF%84%E5%AD%98%E5%99%A8\"><span class=\"toc-text\">特殊功能寄存器</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#I-O-%E5%8F%A3%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">I&#x2F;O 口结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E8%A1%8C-I-O-%E5%8F%A3\"><span class=\"toc-text\">并行 I&#x2F;O 口</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%B2%E8%A1%8C-I-O-%E5%8F%A3\"><span class=\"toc-text\">串行 I&#x2F;O 口</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%97%B6-%E8%AE%A1%E6%95%B0%E5%99%A8\"><span class=\"toc-text\">定时&#x2F;计数器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">中断系统</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0-Keil-C51-%E8%BD%AF%E4%BB%B6%E5%85%A5%E9%97%A8%E4%B8%8E%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">第二章 Keil C51 软件入门与调试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Protues-%E4%BB%BF%E7%9C%9F%E8%BD%AF%E4%BB%B6%E4%B8%8E-Keil-%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">Protues 仿真软件与 Keil 联合调试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E8%A1%8C-I-O-%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">并行 I&#x2F;O 端口</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E4%B8%AD%E6%96%AD%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">51 单片机的中断系统</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-%E5%8D%95%E7%89%87%E6%9C%BA%E5%AE%9A%E6%97%B6-%E8%AE%A1%E6%95%B0%E5%99%A8\"><span class=\"toc-text\">51 单片机定时&#x2F;计数器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%B2%E8%A1%8C%E9%80%9A%E4%BF%A1%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">51 单片机串行通信接口</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">键盘输入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">输出设备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">单片机系统拓展</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%A4%96%E5%9B%B4%E6%8E%A5%E5%8F%A3%E8%8A%AF%E7%89%87\"><span class=\"toc-text\">常用外围接口芯片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">常用数据传输接口</span></a></li></ol></li></ol>","author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"基于Java的排序算法","uid":"3a5ead127caa80ef0aaf607575d6dc9c","slug":"基于Java的排序算法","date":"2024-02-17T12:59:25.000Z","updated":"2024-02-19T04:45:10.293Z","comments":true,"path":"api/articles/基于Java的排序算法.json","keywords":null,"cover":[],"text":"基于 Java 的排序算法八大排序，三大查找是数据结构基础知识点，今天来学习一下排序算法 所谓排序，就是整理表中的元素，使表中的元素按照一定的关键字依次递增或者...","permalink":"/post/基于Java的排序算法","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"Java","slug":"Java","count":4,"path":"api/tags/Java.json"}],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"feature":true}}