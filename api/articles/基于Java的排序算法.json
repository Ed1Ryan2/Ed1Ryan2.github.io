{"title":"基于Java的排序算法","uid":"3a5ead127caa80ef0aaf607575d6dc9c","slug":"基于Java的排序算法","date":"2024-02-17T12:59:25.000Z","updated":"2024-02-19T04:45:10.293Z","comments":true,"path":"api/articles/基于Java的排序算法.json","keywords":null,"cover":[],"content":"<h1 id=\"基于-Java-的排序算法\"><a href=\"#基于-Java-的排序算法\" class=\"headerlink\" title=\"基于 Java 的排序算法\"></a>基于 Java 的排序算法</h1><p>八大排序，三大查找是数据结构基础知识点，今天来学习一下排序算法</p>\n<p>所谓排序，就是整理表中的元素，使表中的元素按照一定的关键字依次递增或者递减的顺序排列</p>\n<p><strong>关于排序的稳定性：</strong> 对于排序的关键字，当待排序的 <a href=\"https://www.baidu.com/link?url=9rxU4w30heR2OuhSSpA3hXPiY8RUodV3pObiwC5vElc9iAB-qcR6Lleh0vHu6hfHsD91PZJhXU5sUb9n5_w31NAvetZX7LpQ3qoItVLwBpvlKUYjFXELjflrVoBAzAd3-TQMjCbaiwq1ES6dizvU8a&wd=&eqid=fbb48bb6001ac3570000000465d0b6be\"><em>排序关键字</em></a> 各不相同时，排序结果唯一，若存在多个关键字相同的排序元素，则不一定唯一，这时，经过排序后这些具有相同关键字的元素之间相对次序不变，则称排序方法是稳定的，否则，若具有相同关键字的排序元素之间的相对次序发生了变化，则称排序方法是不稳定的。</p>\n<p><strong>有关内排序和外排序之间的区别：</strong> 在排序过程中整个表都是放在内存中处理，排序时不涉及内、外存数据交换，称之为内排序，否则为外排序</p>\n<p>排序算法之间的关系如下</p>\n<p><img src=\"/post/%E5%9F%BA%E4%BA%8EJava%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image1.png\" alt=\"image-20240217212013727\"></p>\n<p>以下是他们的性能比较</p>\n<p><img src=\"/post/%E5%9F%BA%E4%BA%8EJava%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image2.png\" alt=\"image-20240217213150360\"></p>\n<p>我们从上往下依次学习他们</p>\n<h2 id=\"直接插入排序\"><a href=\"#直接插入排序\" class=\"headerlink\" title=\"直接插入排序\"></a>直接插入排序</h2><p>直接插入排序是指将一个待排序的元素插入到已经排好序的有序序列当中去，直到插完所有元素为止，步骤如下</p>\n<ol>\n<li>假设第一个元素已经排好序</li>\n<li>依次取出还需要进行排序的下一个元素，设为待插入元素，在已经排好序的元素中从后向前扫描，如果该元素（已经排序）大于待插入元素，则后移</li>\n<li>重复步骤 2，直至找到已排序的元素小于或者等于待排序元素的位置，插入元素</li>\n<li>重复 2,3，完成排序</li>\n</ol>\n<p>直接插入排序的核心思想就是：<strong>将数组中的所有元素依次跟前面已经排好的元素相比较，如果选择的元素比已排序的元素小，则交换，直到全部元素都比较过。</strong></p>\n<p>以下是代码实现</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">*</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">paixu</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Arrays</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Scanner</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ZhijieCharu</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Scanner</span><span style=\"color: #BABED8\"> sc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Scanner</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">in</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入元素的个数</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> n </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> sc</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">nextInt</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> arr</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请依次输入元素</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">sc</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">nextInt</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//以上就构建完我们要排序的原始序列，接下来我们要进行排序</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//假设第一个元素是已经排好序的，外循环是待插入的元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> temp </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">--)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//从最后一个元素开始比较</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]&gt;</span><span style=\"color: #BABED8\">temp</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    arr</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]=</span><span style=\"color: #BABED8\">temp</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">break</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> x</span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\">arr</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//使用foreach输出</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>运行结果</p>\n<p><img src=\"/post/%E5%9F%BA%E4%BA%8EJava%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image3.png\" alt=\"image-20240217221933307\"></p>\n<p>直接插入排序的总结：</p>\n<ul>\n<li>初始元素表越接近有序，直接插入排序的算法时间效率就越高</li>\n<li>平均时间复杂度为O（n2）</li>\n<li>空间复杂度为O（1），是一种稳定的排序算法</li>\n</ul>\n<h2 id=\"希尔插入排序（Shell排序）\"><a href=\"#希尔插入排序（Shell排序）\" class=\"headerlink\" title=\"希尔插入排序（Shell排序）\"></a>希尔插入排序（Shell排序）</h2><p>希尔插入排序是一种插入排序，是直接插入排序的一种高效的改进版本，但是是一种非稳定的算法</p>\n<p>希尔排序充分利用了插入排序的两个特点</p>\n<ol>\n<li>数据规模较小时非常高效</li>\n<li>给定数据已经排好序时时间复杂度为O（n）</li>\n</ol>\n<p><strong>希尔排序的基本思想：</strong>每次把数据分成若干块，来使用插入排序，之后在这若干块排好序的情况下把他们合成大一点的小块，继续使用插入排序，</p>\n","feature":true,"text":"基于 Java 的排序算法八大排序，三大查找是数据结构基础知识点，今天来学习一下排序算法 所谓排序，就是整理表中的元素，使表中的元素按照一定的关键字依次递增或者...","permalink":"/post/基于Java的排序算法","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"Java","slug":"Java","count":4,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E-Java-%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">基于 Java 的排序算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">直接插入排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%8C%E5%B0%94%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%88Shell%E6%8E%92%E5%BA%8F%EF%BC%89\"><span class=\"toc-text\">希尔插入排序（Shell排序）</span></a></li></ol></li></ol>","author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"51单片机原理及应用","uid":"0c7c5c12646ceac7713a737866b0b523","slug":"51单片机基础","date":"2024-02-27T15:18:00.000Z","updated":"2024-03-05T07:50:52.197Z","comments":true,"path":"api/articles/51单片机基础.json","keywords":null,"cover":"https://picdm.sunbangyan.cn/2024/02/27/82daa9f37704b8d40e4ed39570079d0e.jpeg","text":"51 单片机原理及应用第一章 51 单片机基础知识单片机的发展及概述微机、微处理器、单片机概念从使用角度来讲，计算机可以分为 广泛的通用计算机系统 ** 和 *...","permalink":"/post/51单片机基础","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[{"name":"51单片机","slug":"51单片机","count":6,"path":"api/categories/51单片机.json"}],"tags":[{"name":"电子","slug":"电子","count":7,"path":"api/tags/电子.json"}],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"feature":true},"next_post":{"title":"斐波那契数列代码实现","uid":"303cf45e0ace07b44a01a04e2f8411a1","slug":"斐波那契数列代码实现","date":"2024-02-11T13:33:52.000Z","updated":"2024-02-11T14:33:26.807Z","comments":true,"path":"api/articles/斐波那契数列代码实现.json","keywords":null,"cover":"https://picst.sunbangyan.cn/2024/02/11/fc67b6161435d5112dd14294ea60c63a.webp","text":"斐波那契数列斐波那契数列（Fibonacci sequence），又称黄金分割数列 ，因数学家莱昂纳多·斐波那契（Leonardo Fibonacci）以兔子繁...","permalink":"/post/斐波那契数列代码实现","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"Java","slug":"Java","count":4,"path":"api/tags/Java.json"}],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼淼淼淼淼淼淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"feature":true}}