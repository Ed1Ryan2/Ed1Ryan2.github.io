{"title":"Java学习笔记","uid":"1451337e2cd8330994910442b8a41dbc","slug":"Java","date":"2024-01-21T08:53:49.000Z","updated":"2024-01-21T13:21:18.558Z","comments":true,"path":"api/articles/Java.json","keywords":null,"cover":"https://picst.sunbangyan.cn/2024/01/21/21cae43201d6a7fdaa64b1fefebdbb37.jpeg","content":"<h1 id=\"JAVA程序\"><a href=\"#JAVA程序\" class=\"headerlink\" title=\"JAVA程序\"></a>JAVA程序</h1><p>使用记事本编写代码</p>\n<p><strong>public 访问修饰符</strong>用于控制程序的其他部分对这段代码的访问级别</p>\n<p><strong>class</strong>是类，java是面向对象的语言，所有对象必须位于类里面</p>\n<p>一个源文件只能声明一个public的类，其他类个数不限，且源文件名必须和public类名相同，且以.java为后缀。</p>\n<p><strong>main方法</strong>是程序执行的入口，有固定的书写格式</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> args</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>花括号的使用规范</p>\n<p>Java中各个语句依然必须以<strong>分号</strong>结束。回车不是结束的标志，所以一个语句可以跨多行</p>\n<p>注意：编程时一定注意缩进规范，写括号，引号时一定成对编写，然后再往里面插入内容。</p>\n<h1 id=\"常用DOS命令\"><a href=\"#常用DOS命令\" class=\"headerlink\" title=\"常用DOS命令\"></a>常用DOS命令</h1><p>1,cd\t目标路径\t\t进入一个子目录</p>\n<p>2，cd..\t\t\t进入父目录</p>\n<p>3，dir\t\t\t查看本目录下的子文件列表</p>\n<p>4，cls\t\t\t清除屏幕</p>\n<p>5，上下键\t\t\t查找敲过的命令</p>\n<p>6，Tab键\t\t\t自动补全命令</p>\n<p>不需要花费时间学习太多DOS命令</p>\n<p>因为大多数编程过程一般都是在Idea，Eplise等编辑器中进行编辑的</p>\n<h1 id=\"变量和数据类型和运算符\"><a href=\"#变量和数据类型和运算符\" class=\"headerlink\" title=\"变量和数据类型和运算符\"></a>变量和数据类型和运算符</h1><p>预备知识：</p>\n<p><strong>二进制</strong>\t\t0\t\t1</p>\n<p>万物皆有规律，规律能量化，量化能数字化，数字化能计算机化</p>\n<p>二进制由莱布尼茨于1679年发明</p>\n<p>二进制可以对应两种状态，广泛应用于电子科学，比如可以对应电子器件开关状态，对应信号电压状态，对应电磁存储等等</p>\n<p>进制转换：十进制和二进制的相互转换</p>\n<p>满二进一</p>\n<p>要求掌握一些简单算法，权相加法，逆序排列法</p>\n<p><strong>注释</strong></p>\n<p>单行注释&#x2F;&#x2F;开头</p>\n<p>多行注释以\t\t&#x2F;*\t\t开头，以\t\t*&#x2F;结尾，</p>\n<p>文档注释\t\t&#x2F;**\t\t\t\t*&#x2F;</p>\n<p>注意多行注释不可以嵌套使用</p>\n<p>注释在<strong>编译过程</strong>中被忽略掉</p>\n<p><strong>标识符</strong></p>\n<p>就是起名的规则</p>\n<p>1，<strong>必须以字母，下划线，美元符号$开头，切记不能用数字开头</strong></p>\n<p>2，标识符的其他部分还可以是数字</p>\n<p>3，Java标识符大小写敏感，长度无限制</p>\n<p>4，标识符不能是关键字</p>\n<p>标识符使用规范：</p>\n<p>表示类名的标识符：首字母大写</p>\n<p>表示方法和变量：第一个单词小写，第二个单词起首字母大写，称之为驼峰原则</p>\n<p>Java通常采用<strong>Unicode国际字符集</strong>，而不是ASCII字符集</p>\n<p><strong>2个字节表示一个符号</strong>。</p>\n<p><strong>ACSII字符集一个字节一个符号</strong>，即2的八次方&#x3D;256个字符</p>\n<p>Unicode字符集2个字节一个符号，即2的十六次方&#x3D;65536个字符</p>\n<p><strong>变量</strong></p>\n<p>变量对应一个可操作的存储空间</p>\n<p>空间位置是确定的，但是里面放置什么不确定</p>\n<p>可通过变量名来访问对应的存储空间，从而操纵存储空间存储的值</p>\n<p>变量的声明：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">type varName </span><span style=\"color: #89DDFF\">[=</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">][,</span><span style=\"color: #BABED8\">varName</span><span style=\"color: #89DDFF\">[=</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">]......];</span></span></code></pre></div><p>[\t]表示可有可无</p>\n<p>int 4个字节</p>\n<p>double 8个字节</p>\n<p>long 8个字节</p>\n<p><strong>变量的作用域</strong></p>\n<ol>\n<li><p>局部变量：local variable，定义在方法&#x2F;语句块内部，</p>\n</li>\n<li><p>成员变量</p>\n</li>\n<li><p>静态变量</p>\n</li>\n</ol>\n<p><strong>常量</strong></p>\n<p>声明格式：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> 常量类型 常量名 </span><span style=\"color: #89DDFF\">[=</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">];</span></span></code></pre></div><p><strong>基本数据类型primitive</strong> <strong>date type</strong></p>\n<p>数据类型分为基本数据类型和引用数据类型（引用数据类型统一大小为4字节，32位）</p>\n<p>基本数据类型分为数值型，字符型，和布尔型</p>\n<ol>\n<li>数值型又分为整数类型（byte[1],short[2],int[4],long[8]），浮点类型（float[4]，double[8]），</li>\n<li>字符型（char）</li>\n<li>布尔型（boolean）</li>\n</ol>\n<p>整型常量的表示形式</p>\n<ol>\n<li>十进制：33，44，55</li>\n<li>八进制：0开头</li>\n<li>十六进制：0x或者0X开头</li>\n<li>二进制：要求以0b或者0B开头</li>\n</ol>\n<p>定义long时应该在后面加L或者l；</p>\n<p>浮点型：</p>\n<p>float\t\t4字节\t\t</p>\n<p>double\t\t8字节</p>\n<p><strong>浮点型是不精确的，有误差的，</strong>所以不要随便对于浮点数进行比较</p>\n<p>后缀没有f或者F的浮点类型默认是double类型，float类型赋值时需要添加后缀F或者f。</p>\n<p><strong>字符型</strong>占两个字节，</p>\n<p>char类型用于在Unicode编码中的字符，占2个字节，</p>\n<p>ASCII码中字符型占1字节，256个字符；</p>\n<p>定义字符串(字符串不是基本数据类型，而是类)</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> str</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">\t\t</span><span style=\"color: #89DDFF\">&quot;</span></span></code></pre></div><p>转义字符：</p>\n<p>\\</p>\n<p>布尔类型boolean</p>\n<p>只有两个值true，false</p>\n<p>占用1个或者4个字节，不可以用0或非零的数来代替，</p>\n<p><strong>运算符</strong></p>\n<p>1，算数运算符</p>\n<p>二元运算符（+,-,*,&#x2F;,%）</p>\n<p>一元运算符（++，–）</p>\n<p>2，赋值运算符（&#x3D;）</p>\n<p>3，扩展运算符（+&#x3D;，-&#x3D;，*&#x3D;，&#x2F;&#x3D;）</p>\n<p>4，关系运算符（&gt;，&lt;，&gt;&#x3D;，&lt;&#x3D;，&#x3D;&#x3D;，!&#x3D;，instance of）</p>\n<p>5，逻辑运算符（&amp;&amp;，||，！，^）</p>\n<p>6，位运算符（&amp;，|，^,~,&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;）</p>\n<p>7,条件运算符（？：）</p>\n<p>8，字符串连接符（+）；</p>\n<p><strong>算数运算符</strong></p>\n<p>int和long运算，结果转为long，</p>\n<p>若没有long，则结果全为int</p>\n<p>两个操作数有一个为double，则结果为double</p>\n<p>两个操作数都是float，结果才为float</p>\n<p>取模运算的操作数一般为浮点数，但是一般使用整数。结果是余数，余数的符号和左边的操作数相同</p>\n<p><strong>控制语句</strong>（三种基本结构）</p>\n<p>顺序结构</p>\n<p>条件判断结构</p>\n<p>循环结构</p>\n<p>条件判断（三种结构）</p>\n<p>if单分支</p>\n<p>if-else双分支结构</p>\n<p>if-else if-else多分支结构</p>\n<p>switch语句多分支结构</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">switch</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">variable</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF; font-style: italic\">:</span><span style=\"color: #BABED8\">语句</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #89DDFF; font-style: italic\">break</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">语句</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #89DDFF; font-style: italic\">break</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">case</span><span style=\"color: #BABED8\"> 4</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">语句</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>循环结构</p>\n<h1 id=\"Java程序的运行机制\"><a href=\"#Java程序的运行机制\" class=\"headerlink\" title=\"Java程序的运行机制\"></a>Java程序的运行机制</h1><p>高级语言一般分为两种：编译型语言和解释型语言</p>\n<p>Java是两者的结合</p>\n<p>文本编译器编写源程序，后缀为.java，</p>\n<p>再利用编译器编译成字节码文件，后缀为.class,</p>\n<p>最后利用虚拟机（解释器，java）解释执行。</p>\n<h2 id=\"JVM-JRE-JDK（是相互包含的关系\"><a href=\"#JVM-JRE-JDK（是相互包含的关系\" class=\"headerlink\" title=\"JVM,JRE,JDK（是相互包含的关系)\"></a>JVM,JRE,JDK（是相互包含的关系)</h2><h3 id=\"JVM，就是一个虚拟机，用于执行bytecode字节码，可以边解释便运行\"><a href=\"#JVM，就是一个虚拟机，用于执行bytecode字节码，可以边解释便运行\" class=\"headerlink\" title=\"JVM，就是一个虚拟机，用于执行bytecode字节码，可以边解释便运行\"></a>JVM，就是一个虚拟机，用于执行bytecode字节码，可以边解释便运行</h3><p>java的跨平台就是通过java虚拟机来运行的</p>\n<p>对于程序来说，编写的代码是一样的，对于用户来说，不同的系统只需要按照对应的虚拟机，来解释字节码文件。</p>\n<p>不同操作系统利用不同的虚拟机，来屏蔽底层运行平台的差异</p>\n<h3 id=\"JRE，包含Java虚拟机，库函数，运行Java应用程序必须的文件\"><a href=\"#JRE，包含Java虚拟机，库函数，运行Java应用程序必须的文件\" class=\"headerlink\" title=\"JRE，包含Java虚拟机，库函数，运行Java应用程序必须的文件\"></a>JRE，包含Java虚拟机，库函数，运行Java应用程序必须的文件</h3><h3 id=\"JDK，包含JRE，以及增加编译器和调试器等用于程序开发的文件\"><a href=\"#JDK，包含JRE，以及增加编译器和调试器等用于程序开发的文件\" class=\"headerlink\" title=\"JDK，包含JRE，以及增加编译器和调试器等用于程序开发的文件\"></a>JDK，包含JRE，以及增加编译器和调试器等用于程序开发的文件</h3><p>作为一个开发者，需要安装JDK</p>\n<h1 id=\"Java发展简史\"><a href=\"#Java发展简史\" class=\"headerlink\" title=\"Java发展简史\"></a>Java发展简史</h1><p>1991开始研发，SUN公司，设计小型计算机语言</p>\n<p>JAVA核心优势：<strong>跨平台</strong></p>\n<p>赶上互联网爆发的时代优势形成了强大的生态体系</p>\n<p>Java在未来几十年的时间会成为编程的主流语言</p>\n<h2 id=\"各版本\"><a href=\"#各版本\" class=\"headerlink\" title=\"各版本\"></a>各版本</h2><p>JAVASE（JAVA Standard Edition）标准版：定位在个人计算机上的应用</p>\n<p>JAVAEE（JAVA Enterprise Edition）企业版：定位在服务器端上的开发</p>\n<p>JAVAME（JAVA Micro Edition）微型版：定位在消费型电子产品上</p>\n<h2 id=\"Java的特性和优势\"><a href=\"#Java的特性和优势\" class=\"headerlink\" title=\"Java的特性和优势\"></a>Java的特性和优势</h2><p>1，跨平台&#x2F;可移植性</p>\n<p>java的int永远是32位，不像c++，有时16有时32，跨平台实现不了</p>\n<p>2，安全</p>\n<p>3，面向对象</p>\n<p>4，简单性</p>\n<p>去除了头文件，指针运算，结构等等</p>\n<p>5，高性能</p>\n<p>6，分布式</p>\n<p>处理TCP&#x2F;IP协议</p>\n<p>7，多线程</p>\n<p>服务器端处理</p>\n<h1 id=\"JAVA开发环境的搭建\"><a href=\"#JAVA开发环境的搭建\" class=\"headerlink\" title=\"JAVA开发环境的搭建\"></a>JAVA开发环境的搭建</h1><p>1，打开官网，安装JDK</p>\n<p>2，配置环境变量Path</p>\n<p>Path告诉计算机要运行一个程序而没有告诉其所在的完整路径时，除了在当前目录下寻找此程序外，还应该到哪些目录去寻找</p>\n<h1 id=\"多种计算机语言介绍\"><a href=\"#多种计算机语言介绍\" class=\"headerlink\" title=\"多种计算机语言介绍\"></a>多种计算机语言介绍</h1><h2 id=\"C语言\"><a href=\"#C语言\" class=\"headerlink\" title=\"C语言\"></a>C语言</h2><p>1972，贝尔实验室，现代语言的鼻祖，</p>\n<p>目前在底层编程，嵌入式开发，病毒开发，系统程序，操作系统等</p>\n<p>学好C对学习编程非常有帮助</p>\n<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h2><p>混合式语言，既有面向过程，又有面向对象</p>\n<p>在科学计算，操作系统，网络通讯等方面</p>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><p>1995，美国SUN公司，是目前业界最广泛使用人数最多的语言，称为计算机语言界的英语</p>\n<p>广泛应用于企业级软件开发，安卓移动开发，大数据云计算等领域，</p>\n<h2 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h2><p>脚本语言，广泛应用于Web开发</p>\n<p>H5的开发核心是Javascript</p>\n<h2 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h2><p>1989年，早于Java</p>\n<p>之前广泛应用于科研领域，WEB编程等等，但是目前在人工智能方面具有巨大潜力</p>\n<h2 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h2><p>一般用于WEB开发</p>\n<p>大量中小型网站使用PHP开发，</p>\n<h2 id=\"Object-C和Swift语言\"><a href=\"#Object-C和Swift语言\" class=\"headerlink\" title=\"Object-C和Swift语言\"></a>Object-C和Swift语言</h2><p>苹果开发</p>\n<h2 id=\"C-（C-sharp）\"><a href=\"#C-（C-sharp）\" class=\"headerlink\" title=\"C#（C-sharp）\"></a>C#（C-sharp）</h2><p>微软公司，面向对象，运行于.NET框架平台之上的高级程序设计语言</p>\n<p>基于Windows操作系统应用开发这一块取代了C++，<strong>微软</strong></p>\n<h2 id=\"Kotlin语言（考特林）\"><a href=\"#Kotlin语言（考特林）\" class=\"headerlink\" title=\"Kotlin语言（考特林）\"></a>Kotlin语言（考特林）</h2><p>目前已经正式成为安卓官方支持的语言，且可以兼容Java</p>\n<h2 id=\"Go语言\"><a href=\"#Go语言\" class=\"headerlink\" title=\"Go语言\"></a>Go语言</h2><p>谷歌官方开发的语言</p>\n<h2 id=\"易语言\"><a href=\"#易语言\" class=\"headerlink\" title=\"易语言\"></a>易语言</h2><p>以中文作为程序代码编程语言，目前主要用来开发脚本，外挂等程序</p>\n<h2 id=\"Fortran语言\"><a href=\"#Fortran语言\" class=\"headerlink\" title=\"Fortran语言\"></a>Fortran语言</h2><p>IBM公司，1954</p>\n<p>复杂科学计算，工程领域</p>\n<h2 id=\"Basic语言\"><a href=\"#Basic语言\" class=\"headerlink\" title=\"Basic语言\"></a>Basic语言</h2><p>易学，功能不够强大，已经退出历史舞台</p>\n<h2 id=\"Pascal语言\"><a href=\"#Pascal语言\" class=\"headerlink\" title=\"Pascal语言\"></a>Pascal语言</h2><h2 id=\"COBOL语言\"><a href=\"#COBOL语言\" class=\"headerlink\" title=\"COBOL语言\"></a>COBOL语言</h2><h1 id=\"计算机语言发展史及未来发展方向\"><a href=\"#计算机语言发展史及未来发展方向\" class=\"headerlink\" title=\"计算机语言发展史及未来发展方向\"></a>计算机语言发展史及未来发展方向</h1><p>工业革命——————解放体力</p>\n<p>信息革命——————解放脑力</p>\n<h2 id=\"计算机已经成为了人类大脑的延伸\"><a href=\"#计算机已经成为了人类大脑的延伸\" class=\"headerlink\" title=\"计算机已经成为了人类大脑的延伸\"></a>计算机已经成为了人类大脑的延伸</h2><p>计算机随处可见，手机，玩具，微波炉，洗衣机，汽车等，都有计算机的出现</p>\n<h2 id=\"算法是计算机的灵魂，编程语言是塑造计算机灵魂的工具\"><a href=\"#算法是计算机的灵魂，编程语言是塑造计算机灵魂的工具\" class=\"headerlink\" title=\"算法是计算机的灵魂，编程语言是塑造计算机灵魂的工具\"></a>算法是计算机的灵魂，编程语言是塑造计算机灵魂的工具</h2><p>计算机编程语言经历了从低级到高级的发展，发展核心思想是“让人更容易编程”</p>\n<p>3个阶段</p>\n<p>1，机器语言（相当于人类的原始社会）</p>\n<p>通常是纯数字，0和1</p>\n<p>2，汇编语言（相当于人类的工业阶段）</p>\n<p>使用常见的汇编语言助记符</p>\n<p>在某些工业电子编程领域，软件的加密解密，计算机病毒分析等仍在使用</p>\n<p>3，高级语言（相当于人类的工业社会）</p>\n<p>程序开始非常易懂</p>\n<h1 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a><strong>面向对象</strong></h1><p>类和对象，内存底层，面向对象的三大特征，特殊类</p>\n<h2 id=\"一，熟悉面向对象\"><a href=\"#一，熟悉面向对象\" class=\"headerlink\" title=\"一，熟悉面向对象\"></a>一，熟悉面向对象</h2><h3 id=\"1，表格结构和类结构\"><a href=\"#1，表格结构和类结构\" class=\"headerlink\" title=\"1，表格结构和类结构\"></a>1，表格结构和类结构</h3><table>\n<thead>\n<tr>\n<th>类（表结构）</th>\n<th>ID</th>\n<th>Name</th>\n<th>Money</th>\n<th>Date</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>对象</td>\n<td>0001</td>\n<td>张三</td>\n<td>1000</td>\n<td>9&#x2F;1</td>\n</tr>\n<tr>\n<td>对象</td>\n<td>0002</td>\n<td>李四</td>\n<td>2000</td>\n<td>10&#x2F;1</td>\n</tr>\n<tr>\n<td>对象</td>\n<td>0003</td>\n<td>王五</td>\n<td>3000</td>\n<td>11&#x2F;1</td>\n</tr>\n</tbody></table>\n<p>类对应表格的结构，对象对应表格的内容</p>\n<p>一行数据对应一个对象，而表头（表结构）则对应的是类</p>\n<p>如果未来要学习数据库，数据库，就是一张张的表，在一张张表中调用和存储数据就是对对象和类的应用</p>\n<table>\n<thead>\n<tr>\n<th>雇员表结构（类）</th>\n<th>Class Employee</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID</td>\n<td>int ID</td>\n</tr>\n<tr>\n<td>Name</td>\n<td>String Name</td>\n</tr>\n<tr>\n<td>Money</td>\n<td>String Money</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>String Date</td>\n</tr>\n<tr>\n<td>晨会动作</td>\n<td>void kaichenhui(){}</td>\n</tr>\n</tbody></table>\n<h3 id=\"表格的动作和类的方法\"><a href=\"#表格的动作和类的方法\" class=\"headerlink\" title=\"表格的动作和类的方法\"></a>表格的动作和类的方法</h3><p>在类中定义成方法，即对每个对象都作用动态</p>\n<h2 id=\"二、面向过程和面向对象思想联系\"><a href=\"#二、面向过程和面向对象思想联系\" class=\"headerlink\" title=\"二、面向过程和面向对象思想联系\"></a>二、面向过程和面向对象思想联系</h2><h3 id=\"1、面向对象和面向过程的区别\"><a href=\"#1、面向对象和面向过程的区别\" class=\"headerlink\" title=\"1、面向对象和面向过程的区别\"></a>1、面向对象和面向过程的区别</h3><p>面向过程：执行者思维，关注的是怎么实现</p>\n<p>对于一件事，首先考虑第一步干什么，第二步干什么，第三步……</p>\n<p>面向对象：对每一个对象操作</p>\n<p>假设要建一艘航母，一艘航母要由几百万甚至几亿个零件来构成，如果是面向过程，就要考虑对于建造航母，第一步该干什么，第二步该干什么，而操作对象仅为个体的零件，但如果是面向对象，我们首先考虑的就是如何设计这个事物，而不是按照步骤建造的问题，这之间的差别是思维模式的转变。</p>\n<p>比如，使用面向对象的思想来思考如何设计车</p>\n<p>天然的，我们就会从“车由什么组成”开始思考，发现车由以下对象构成</p>\n<ol>\n<li>轮胎</li>\n<li>发动机</li>\n<li>车壳</li>\n<li>座椅</li>\n<li>玻璃</li>\n</ol>\n<p>为了便于协作，去找轮胎厂完成制造轮胎的步骤，发动机厂完成制造发动机的步骤……这样，大家可以同时进行汽车的制造，最终进行组装，大大提高了效率</p>\n<p>综上所述，面向对象可以帮助我们从宏观上把握，从整体上分析整个系统，但是具体到部分的微观操作仍然需要面向过程的思想去处理。</p>\n<p>面向对象和面向过程都是解决问题的思维方式，都是代码组织的方式。</p>\n<p><strong>面向过程是一种执行者思维</strong></p>\n<p><strong>面向对象是一种设计者思维</strong></p>\n<p><em>面向对象离不开面向过程：宏观上通过面向对象进行整体设计，微观上执行和处理数据，仍然是面向过程</em></p>\n<p>（简单的问题使用面向过程的思维方式就可以了，而复杂问题需要通过面向对象的组织思想）</p>\n<h3 id=\"面向对象分析：写诗\"><a href=\"#面向对象分析：写诗\" class=\"headerlink\" title=\"面向对象分析：写诗\"></a><strong>面向对象分析：写诗</strong></h3><ul>\n<li>登鹳雀楼</li>\n<li>白日依山尽</li>\n<li>黄河入海流</li>\n<li>欲穷千里目</li>\n<li>更上一层楼</li>\n</ul>\n<p>外在场景：太阳，天空，黄河，河流交汇处，鹳雀楼，草</p>\n<p>诗人情怀：登高望远，进取，努力</p>\n<p>描述过程：由远及近，再到自身情怀</p>\n<p>可以用表格来表示以上信息</p>\n<table>\n<thead>\n<tr>\n<th>物体</th>\n<th>物体类别</th>\n<th>别称（雅称）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>太阳</td>\n<td>实物</td>\n<td>金虎，赤乌，阳乌，朱雀……</td>\n</tr>\n<tr>\n<td>天空</td>\n<td>实物</td>\n<td>皇天，天宇，玉宇……</td>\n</tr>\n<tr>\n<td>黄河</td>\n<td>实物</td>\n<td>大河，母亲河，上河……</td>\n</tr>\n<tr>\n<td>草</td>\n<td>实物</td>\n<td>芦苇……</td>\n</tr>\n<tr>\n<td>鹳雀楼</td>\n<td>实物</td>\n<td>楼……</td>\n</tr>\n<tr>\n<td>登高望远</td>\n<td>虚物</td>\n<td>……</td>\n</tr>\n<tr>\n<td>进取</td>\n<td>虚物</td>\n<td>……</td>\n</tr>\n<tr>\n<td>努力</td>\n<td>虚物</td>\n<td>天天向上……</td>\n</tr>\n</tbody></table>\n<p>完成以上Object以后，就需要进行组合，将这些Object融合到一个场景</p>\n<p>以上就是使用面向对象的思维来写的一首诗。</p>\n<h3 id=\"面向对象分析：写小说\"><a href=\"#面向对象分析：写小说\" class=\"headerlink\" title=\"面向对象分析：写小说\"></a><strong>面向对象分析：写小说</strong></h3><p>对于一部小说，里面的场景，人物等等对象，都是事先构思好的，顺着大致的脉络一篇一篇往下写。</p>\n<h2 id=\"三、对象和类的详解\"><a href=\"#三、对象和类的详解\" class=\"headerlink\" title=\"三、对象和类的详解\"></a>三、对象和类的详解</h2><h3 id=\"1，类和对象的概念\"><a href=\"#1，类和对象的概念\" class=\"headerlink\" title=\"1，类和对象的概念\"></a>1，类和对象的概念</h3><p>在去认识一个事物的时候，肯定是去先去见一下实物，自己才能够再去抽象一种概念，一种理解。</p>\n<p>从认识的角度来理解，先有一个真实的物体，然后主观抽象出一个类，才能有这么一个对象。</p>\n<p>总结的过程就是抽象的过程</p>\n<p>类可以看作一个模板（表结构），或者图纸，系统根据类的定义来造出对象。</p>\n<p>类：我们叫做Class，对象：我们叫做Object，通常说某个类的对象，某个类的实例，是一样的意思。</p>\n<p>定义好类之后，一般会有三种常见的成员：属性，方法，构造器</p>\n<p>属性：定义该类或者该类对象所包含的数据或者说静态特征（也叫成员变量）</p>\n<p>方法：用于定义该类或者该类实例的行为特征或者功能实现（动态）</p>\n<p>构造器：也叫做构造方法，用于对象的初始化；</p>\n<p>构造器的四个要点</p>\n<ol>\n<li>构造器通过new关键字调用！</li>\n<li>构造器有返回值，但是不能定义返回值的类型，不能写返回值，不能return</li>\n<li>如果没有定义构造器，则编译器会构造一个无参数的构造器。</li>\n<li>构造器方法名必须和类名一致！</li>\n</ol>\n<h3 id=\"2，内存分析\"><a href=\"#2，内存分析\" class=\"headerlink\" title=\"2，内存分析\"></a>2，内存分析</h3><p><strong>内存模型</strong></p>\n<ol>\n<li>线程：程序计数器，虚拟机栈，本地方法栈</li>\n<li>堆：新生代，老年代</li>\n<li>方法区：运行时常量池</li>\n<li>直接内存</li>\n<li>其他内存</li>\n</ol>\n<p>执行过程的内存分析</p>\n<p>通过内存分析更深刻的理解<strong>对象</strong></p>\n<p>Java虚拟机内存模型概念</p>\n<p>线程分为程序计数器，虚拟机栈，本地方法栈。</p>\n<p>堆：创建的Java对象都在堆里面</p>\n<p>方法区：一种Java虚拟机的规范</p>\n<h4 id=\"程序执行的内存分析过程（掌握）\"><a href=\"#程序执行的内存分析过程（掌握）\" class=\"headerlink\" title=\"程序执行的内存分析过程（掌握）\"></a>程序执行的内存分析过程（掌握）</h4><p>Java虚拟机分为：虚拟机栈，堆，方法区</p>\n<h5 id=\"虚拟机栈\"><a href=\"#虚拟机栈\" class=\"headerlink\" title=\"虚拟机栈\"></a>虚拟机栈</h5><ul>\n<li>栈描述的是方法执行的内存模型。每个方法会创建一个栈帧（存储<strong>局部变量</strong>，操作数，方法出口等。）</li>\n<li>JVM会为每个线程创造一个栈 </li>\n<li>栈属于私有，不能在线程之间共享</li>\n<li>栈的存储特性是“先进后出，后进先出”</li>\n<li>栈由系统自动分配，速度快，栈是一个连续的存储空间</li>\n</ul>\n<h5 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a>堆</h5><ul>\n<li>用于存储创建好的对象和数组（数组也是对象）</li>\n<li>Java只有一个堆，被所有线程共享</li>\n<li>堆是不连续的，分配灵活，速度慢</li>\n</ul>\n<h5 id=\"方法区\"><a href=\"#方法区\" class=\"headerlink\" title=\"方法区\"></a>方法区</h5><ul>\n<li>方法区是Java虚拟机规范，可以有不同实现</li>\n<li>JVM只有一个方法区，被所有线程共享</li>\n<li>方法区实际上也是堆，只是用于存储类，常量等相关信息</li>\n<li>用来存放程序中永远是不变或者唯一的内容</li>\n</ul>\n<h3 id=\"3，垃圾回收机制\"><a href=\"#3，垃圾回收机制\" class=\"headerlink\" title=\"3，垃圾回收机制\"></a>3，垃圾回收机制</h3><p>内存管理：Java内存管理中很大程度指的就是：堆中对象的管理</p>\n<p>对象空间的分配：使用new关键字创建对象</p>\n<p>堆空间的释放</p>\n<p>垃圾回收算法：1，引用计数法，引用 次数达到上限后自动释放空间</p>\n<p>2，引用可达法（根搜索法）</p>\n<h3 id=\"4，分代垃圾回收机制\"><a href=\"#4，分代垃圾回收机制\" class=\"headerlink\" title=\"4，分代垃圾回收机制\"></a>4，分代垃圾回收机制</h3><ol>\n<li>年轻代，所有新生成的对象首先放置Eden区，年轻代的目标尽可能尽快收集掉那些生命周期短的对象，年轻代区域放满对象后，就将对象存放到年老代区域</li>\n<li>年老代，年轻代中经历了N(默认15)次以后仍然存活，就会被放到年老代，属于生命周期较长的现象</li>\n<li>永久代，用于存放静态文件，如Java类，方法等。</li>\n</ol>\n<h2 id=\"this，static关键字\"><a href=\"#this，static关键字\" class=\"headerlink\" title=\"this，static关键字\"></a>this，static关键字</h2><h3 id=\"this关键字\"><a href=\"#this关键字\" class=\"headerlink\" title=\"this关键字\"></a>this关键字</h3><h4 id=\"对象创建的过程和this的本质\"><a href=\"#对象创建的过程和this的本质\" class=\"headerlink\" title=\"对象创建的过程和this的本质\"></a>对象创建的过程和this的本质</h4><p>创建一个对象：1，分配空间，初始化为0或Null，2，执行属性值显式初始化，3，执行构造方法，4，返回对象地址给相关变量</p>\n<p> this可以构造初始化方法，避免相同name</p>\n","text":"JAVA程序使用记事本编写代码 public 访问修饰符用于控制程序的其他部分对这段代码的访问级别 class是类，java是面向对象的语言，所有对象必须位于类...","permalink":"/post/Java","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"编程","slug":"编程","count":3,"path":"api/categories/编程.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JAVA%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">JAVA程序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8DOS%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">常用DOS命令</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">变量和数据类型和运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">Java程序的运行机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JVM-JRE-JDK%EF%BC%88%E6%98%AF%E7%9B%B8%E4%BA%92%E5%8C%85%E5%90%AB%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">JVM,JRE,JDK（是相互包含的关系)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JVM%EF%BC%8C%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8C%E7%94%A8%E4%BA%8E%E6%89%A7%E8%A1%8Cbytecode%E5%AD%97%E8%8A%82%E7%A0%81%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%BE%B9%E8%A7%A3%E9%87%8A%E4%BE%BF%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">JVM，就是一个虚拟机，用于执行bytecode字节码，可以边解释便运行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JRE%EF%BC%8C%E5%8C%85%E5%90%ABJava%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8C%E5%BA%93%E5%87%BD%E6%95%B0%EF%BC%8C%E8%BF%90%E8%A1%8CJava%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BF%85%E9%A1%BB%E7%9A%84%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">JRE，包含Java虚拟机，库函数，运行Java应用程序必须的文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JDK%EF%BC%8C%E5%8C%85%E5%90%ABJRE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%8A%A0%E7%BC%96%E8%AF%91%E5%99%A8%E5%92%8C%E8%B0%83%E8%AF%95%E5%99%A8%E7%AD%89%E7%94%A8%E4%BA%8E%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E7%9A%84%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">JDK，包含JRE，以及增加编译器和调试器等用于程序开发的文件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2\"><span class=\"toc-text\">Java发展简史</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%84%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">各版本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E7%9A%84%E7%89%B9%E6%80%A7%E5%92%8C%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">Java的特性和优势</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JAVA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">JAVA开发环境的搭建</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%A7%8D%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">多种计算机语言介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#C%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">C语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#C\"><span class=\"toc-text\">C++</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java\"><span class=\"toc-text\">Java</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Javascript\"><span class=\"toc-text\">Javascript</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Python\"><span class=\"toc-text\">Python</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP\"><span class=\"toc-text\">PHP</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Object-C%E5%92%8CSwift%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">Object-C和Swift语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#C-%EF%BC%88C-sharp%EF%BC%89\"><span class=\"toc-text\">C#（C-sharp）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Kotlin%E8%AF%AD%E8%A8%80%EF%BC%88%E8%80%83%E7%89%B9%E6%9E%97%EF%BC%89\"><span class=\"toc-text\">Kotlin语言（考特林）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Go%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">Go语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%98%93%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">易语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Fortran%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">Fortran语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Basic%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">Basic语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Pascal%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">Pascal语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#COBOL%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">COBOL语言</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%8F%91%E5%B1%95%E5%8F%B2%E5%8F%8A%E6%9C%AA%E6%9D%A5%E5%8F%91%E5%B1%95%E6%96%B9%E5%90%91\"><span class=\"toc-text\">计算机语言发展史及未来发展方向</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%B2%E7%BB%8F%E6%88%90%E4%B8%BA%E4%BA%86%E4%BA%BA%E7%B1%BB%E5%A4%A7%E8%84%91%E7%9A%84%E5%BB%B6%E4%BC%B8\"><span class=\"toc-text\">计算机已经成为了人类大脑的延伸</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%98%AF%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E7%81%B5%E9%AD%82%EF%BC%8C%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%98%AF%E5%A1%91%E9%80%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%81%B5%E9%AD%82%E7%9A%84%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">算法是计算机的灵魂，编程语言是塑造计算机灵魂的工具</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">面向对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%EF%BC%8C%E7%86%9F%E6%82%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">一，熟悉面向对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%EF%BC%8C%E8%A1%A8%E6%A0%BC%E7%BB%93%E6%9E%84%E5%92%8C%E7%B1%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">1，表格结构和类结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E6%A0%BC%E7%9A%84%E5%8A%A8%E4%BD%9C%E5%92%8C%E7%B1%BB%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">表格的动作和类的方法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E5%92%8C%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E8%81%94%E7%B3%BB\"><span class=\"toc-text\">二、面向过程和面向对象思想联系</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">1、面向对象和面向过程的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%EF%BC%9A%E5%86%99%E8%AF%97\"><span class=\"toc-text\">面向对象分析：写诗</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%EF%BC%9A%E5%86%99%E5%B0%8F%E8%AF%B4\"><span class=\"toc-text\">面向对象分析：写小说</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%AF%B9%E8%B1%A1%E5%92%8C%E7%B1%BB%E7%9A%84%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">三、对象和类的详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%EF%BC%8C%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1，类和对象的概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%EF%BC%8C%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2，内存分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B%EF%BC%88%E6%8E%8C%E6%8F%A1%EF%BC%89\"><span class=\"toc-text\">程序执行的内存分析过程（掌握）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88\"><span class=\"toc-text\">虚拟机栈</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A0%86\"><span class=\"toc-text\">堆</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%8C%BA\"><span class=\"toc-text\">方法区</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%EF%BC%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">3，垃圾回收机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%EF%BC%8C%E5%88%86%E4%BB%A3%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">4，分代垃圾回收机制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#this%EF%BC%8Cstatic%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">this，static关键字</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#this%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">this关键字</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E7%9A%84%E8%BF%87%E7%A8%8B%E5%92%8Cthis%E7%9A%84%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">对象创建的过程和this的本质</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"瞎学的java基础语法","uid":"50dae02cf68f09e79955ea48c8fd607c","slug":"javaGrammar","date":"2024-01-21T15:53:45.000Z","updated":"2024-01-22T11:33:06.163Z","comments":true,"path":"api/articles/javaGrammar.json","keywords":null,"cover":null,"text":"ε &#x3D;(´ο｀*)))唉，上次用 Java 还是在上次，感觉语法什么的已经忘得干干净净了，先来总结一些我易混的知识点啥的恢复一下记忆 Java标识符定...","permalink":"/post/javaGrammar","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"编程","slug":"编程","count":3,"path":"api/categories/编程.json"}],"tags":[{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"}],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}}},"next_post":{"title":"commonSoftware","uid":"e20937b340b4576fb9a9923d14634252","slug":"commonSoftware","date":"2024-01-21T05:14:54.000Z","updated":"2024-01-21T06:11:04.641Z","comments":true,"path":"api/articles/commonSoftware.json","keywords":null,"cover":null,"text":"王兆淼王兆淼 ","permalink":"/post/commonSoftware","photos":[],"count_time":{"symbolsCount":7,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Ed-RYan","slug":"blog-author","avatar":"https://picdl.sunbangyan.cn/2024/01/27/b3236412f4a1762b08031ab7af587235.webp","link":"/","description":"想暂停时间 <br /> @ <b>淼</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"iconfont icon-tengxunQQ","link":"https://picdl.sunbangyan.cn/2024/01/21/8f2f70af10b4f0d5d6f32559116ba096.jpeg"},"Bilibili":{"icon":"iconfont icon-bilibili","link":"https://space.bilibili.com/142342578?spm_id_from=333.1007.0.0"},"Wechat":{"icon":"iconfont icon-weixin","link":"https://picdl.sunbangyan.cn/2024/01/21/42a74c77817f8c7588ebeedffd7e94e3.jpeg"},"WechatPay":{"icon":"iconfont icon-weixinzhifu","link":"https://picss.sunbangyan.cn/2024/01/21/42669be5c178707607662c75477734a8.jpeg"}}}}}}